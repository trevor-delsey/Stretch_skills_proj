---
title: "Stretch Skills Project"
subtitle: ""
authors: "Trevor Delsey and Cirell Alfonso"
output: html_document
format: 
  html: 
    link-external-newwindow: true
    toc: true
    embed-resources: true
    self-contained: true
  pdf: default 
---

```{r setup, include=FALSE}
knitr::opts_chunk$set( warning = FALSE, message = FALSE)
```
``` {r libsetup}
library(tidyverse)
library(survival)
library(survminer)
library(tidymodels)
library(glmnet)
library(censored)
library(here)
library(skimr)
```

```{r}
# Load data

set.seed(123456789)
load(here("data/modeling_project.rda"))

# Here I'm just getting rid of all of the NAs in the survival columns (not censored data just the ones actually listed as NA)

metabric_modeling <- metabric %>% 
  filter(!is.na(relapse_free_status_months) & !is.na(relapse))

```

```{r "Adding Time Varying Covariates"}

# I'm testing out the model the normal way to see if we satisfy the proportional hazards assumption, 
# since we fail this assumption I am messing around with various combinations of time varying covariates and 
# Stratification

fullmodel <- coxph(
  Surv(relapse_free_status_months, relapse) ~ 
    pam50_claudin_low_subtype +
    age_at_diagnosis +
    inferred_menopausal_state +
    lymph_nodes_examined_positive +
    npi_cat +
    chemotherapy +
    tumor_size +
    tumor_stage +
    type_of_breast_surgery + 
    strata(neoplasm_histologic_grade, cohort, integrative_cluster,
           primary_tumor_laterality, x3_gene_classifier_subtype),
    data = metabric_modeling)

cox.zph(fullmodel)

schoenfeld_residuals <- as_tibble(residuals(fullmodel, type = "schoenfeld"), )



metabric_modeling <- metabric_modeling %>% 
  mutate(metabric_surv = survival::Surv(time = relapse_free_status_months + .001, event = relapse == 1), 
         .keep = "unused") %>% 
  select(-patient_id, -nottingham_prognostic_index) %>% 
  mutate(across(where(is.character), as_factor)) 

```

```{r}
split <- initial_split(metabric_modeling, prop = 0.8)

training <- as.data.frame(training(split))
testing <- testing(split)

```

```{r}
cox_model <- proportional_hazards(
  penalty = tune(), 
  mixture = 1
) %>% 
  set_engine("glmnet") %>% 
  set_mode("censored regression")

cox_model_no_lasso <- proportional_hazards() %>% 
  set_engine("survival")

```

```{r}
cox_workflow <- workflow() %>%
  step_dummy(all_nominal_predictors()) %>% 
  step_unknown(all_nominal_predictors()) %>% 
  step_impute_median(all_numeric_predictors()) %>% 
  add_variables(metabric_surv, 
          c(
            pam50_claudin_low_subtype,
            age_at_diagnosis,
            cohort,
            inferred_menopausal_state,
            lymph_nodes_examined_positive,
            npi_cat,
            chemotherapy,
            tumor_size,
            tumor_stage,
            type_of_breast_surgery,
            neoplasm_histologic_grade,
            integrative_cluster,
            primary_tumor_laterality,
            x3_gene_classifier_subtype
            )
          ) %>% 
  add_model(cox_model, 
    formula = metabric_surv ~  pam50_claudin_low_subtype +
    age_at_diagnosis +
    inferred_menopausal_state +
    lymph_nodes_examined_positive +
    npi_cat +
    chemotherapy +
    tumor_size +
    tumor_stage +
    type_of_breast_surgery + 
    strata(neoplasm_histologic_grade, cohort, integrative_cluster,
           primary_tumor_laterality, x3_gene_classifier_subtype))


fit_test <- fit(cox_workflow, training)


cox_workflow_no_lasso <- workflow() %>%
  step_unknown(all_nominal_predictors(), "Missing") %>% 
  add_variables(metabric_surv, 
          c(
            pam50_claudin_low_subtype,
            age_at_diagnosis,
            cohort,
            inferred_menopausal_state,
            lymph_nodes_examined_positive,
            npi_cat,
            chemotherapy,
            tumor_size,
            tumor_stage,
            type_of_breast_surgery,
            neoplasm_histologic_grade,
            integrative_cluster,
            primary_tumor_laterality,
            x3_gene_classifier_subtype
            )
          ) %>% 
  add_model(cox_model_no_lasso,
            formula = metabric_surv ~  pam50_claudin_low_subtype +
            age_at_diagnosis +
            strata(cohort) +
            inferred_menopausal_state +
            lymph_nodes_examined_positive +
            npi_cat +
            chemotherapy +
            tumor_size +
            tumor_stage +
            type_of_breast_surgery + 
            strata(neoplasm_histologic_grade) +
            strata(integrative_cluster) +
            strata(primary_tumor_laterality) +
            strata(x3_gene_classifier_subtype))

```

```{r}
survival_metrics <- metric_set(concordance_survival)

cv_folds <- vfold_cv(training, v = 2)

grid <- grid_regular(penalty(), levels = 2)

tune_results <- tune_grid(
  cox_workflow,
  grid = grid,
  resamples = cv_folds,
  metrics = survival_metrics,
)

save(tune_results, file = here("data", "tune_results.rda"))

load(file = here("data", "tune_results.rda"))

best_penalty_concord <- tune_results %>%
  select_best(metric = "concordance_survival")


```

```{r}
final_workflow <- finalize_workflow(cox_workflow, best_penalty_concord)

final_fit <- fit(final_workflow, training)



Coeff_estimates <- pull_workflow_fit(final_fit) %>% tidy() %>% filter(estimate != 0)

Coeff_estimates <- Coeff_estimates %>% select(term, estimate) %>% 
  mutate(exp_estim = exp(estimate))



final_cox_fit <- last_fit(
  final_workflow, 
  split = split,
  metrics = metric_set(concordance_survival) 
)

final_cox_fit %>% collect_metrics()
```

```{r}
final_fit_no_lasso <- fit(cox_workflow_no_lasso, training)
Coeff_estimates_no_lasso <- pull_workflow_fit(final_fit_no_lasso) %>% tidy()

final_cox_fit_no_lasso <- last_fit(
  cox_workflow_no_lasso, 
  split = split,
  metrics = metric_set(concordance_survival) 
)

final_cox_fit_no_lasso %>% collect_metrics()
```

