---
title: "Stretch Skills Project"
subtitle: ""
authors: "Trevor Delsey and Cirell Alfonso"
output: html_document
format: 
  html: 
    link-external-newwindow: true
    toc: true
    embed-resources: true
    self-contained: true
  pdf: default 
---

```{r setup, include=FALSE}
knitr::opts_chunk$set( warning = FALSE, message = FALSE)
```
``` {r libsetup}
library(tidyverse)
library(survival)
library(survminer)
library(tidymodels)
library(glmnet)
library(censored)
library(here)
```

```{r}
# Load data
set.seed(12345)
load(here("data/modeling_project.rda"))

metabric_modeling <- metabric %>% 
  filter(!is.na(relapse_free_status_months) & !is.na(relapse))

```

```{r "Adding Time Varying Covariates"}

metabric_modeling <-  metabric_modeling  %>% 
  mutate(age_interval = cut(age_at_diagnosis, breaks = c(21.93, 30, 50, 70, 96.29)))
  

fullmodel <- coxph(
  Surv(relapse_free_status_months, relapse) ~ 
    pam50_claudin_low_subtype +
    age_at_diagnosis +
    strata(cohort) +
    inferred_menopausal_state +
    lymph_nodes_examined_positive +
    npi_cat +
    chemotherapy +
    tumor_size +
    tumor_stage +
    type_of_breast_surgery + 
    strata(neoplasm_histologic_grade) +
    strata(integrative_cluster) +
    primary_tumor_laterality +
    strata(x3_gene_classifier_subtype),
  data = metabric_modeling, 
  tt = function(x, t, ...) prod(x * log(t +0.001), na.rm = T))

cox.zph(fullmodel)

metabric_modeling <- metabric_modeling %>% 
  mutate(metabric_surv = survival::Surv(time = relapse_free_status_months + .001, event = relapse == 1), 
         .keep = "unused") %>% 
  select(-patient_id, -nottingham_prognostic_index) %>% 
  mutate(across(where(is.character), as_factor)) 

```

```{r}
split <- initial_split(metabric_modeling, prop = 0.8)

training <- as.data.frame(training(split))
testing <- testing(split)

```

```{r}
cox_model <- proportional_hazards(
  penalty = tune(), 
  mixture = 1
) %>% 
  set_engine("glmnet") %>% 
  set_mode("censored regression")

```

```{r}
cox_workflow <- workflow() %>%
  step_dummy(all_nominal_predictors()) %>% 
  step_unknown(all_nominal_predictors()) %>% 
  step_impute_median(all_numeric_predictors()) %>% 
  add_model(cox_model) %>% 
  add_formula(formula = metabric_surv ~  pam50_claudin_low_subtype +
    age_at_diagnosis +
    strata(cohort) +
    inferred_menopausal_state +
    lymph_nodes_examined_positive +
    npi_cat +
    chemotherapy +
    tumor_size +
    tumor_stage +
    type_of_breast_surgery + 
    strata(neoplasm_histologic_grade) +
    strata(integrative_cluster) +
    primary_tumor_laterality +
    strata(x3_gene_classifier_subtype))


```

```{r}
survival_metrics <- metric_set(brier_survival, concordance_survival, roc_auc_survival)

cv_folds <- vfold_cv(training, v = 10)

grid <- grid_regular(penalty(), levels = 10)

# tune_results <- tune_grid(
#   cox_workflow,
#   grid = grid,
#   resamples = cv_folds,
#   metrics = survival_metrics,
#   eval_time = seq(10, max(training$metabric_surv[,1]), by = 100)
# )
# 
# save(tune_results, file = here("data", "tune_results.rda"))

load(file = here("data", "tune_results.rda"))

best_penalty_concord <- tune_results %>%
  select_best(metric = "concordance_survival")

best_penalty_brier <- tune_results %>%
  select_best(metric = "brier_survival")

best_penalty_roc_auc <- tune_results %>%
  select_best(metric = "roc_auc_survival")



```

```{r}
final_workflow <- finalize_workflow(cox_workflow, best_penalty_concord)

final_fit <- fit(final_workflow, training)

Coeff_estimates <- pull_workflow_fit(final_fit) %>% tidy() %>% filter(estimate != 0)

Coeff_estimates <- Coeff_estimates %>% select(term, estimate) %>% 
  mutate(exp_estim = exp(estimate))


final_cox_fit <- last_fit(
  final_workflow, 
  split = split,
  metrics = metric_set(concordance_survival), 
)

final_cox_fit %>% collect_metrics()
```


